/**
 * @name Ditto
 * @summary This script copies the source files of selected files to a new user-defined destination.
 * @author Blake Fealy (WLS)
 * @version 1.0
 * @dependencies The script requires the user to select clips/files in the project window and requires those files to have a source file in the file explorer.
 * @updated 2025-05-01
 * @interface User is prompted to select the destination directory to copy the files to. User can browse for the folder or simply paste the folder path into the path field.
 * @userNotes A log file is created and/or updated at the destination location.
 * @runningBool true
 */

function logCopiedMedia(logFile, fileName, sourcePath, destinationPath) {
    if (!logFile.exists) {
        logFile.open("w");
    } else {
        logFile.open("e");
        logFile.seek(0, 2); // Go to end of file
    }

    var logEntry = "-----------------------------------------------\n" +
                    ">>> Copied: " + fileName + "<<<\n" +
                   "\n  >> From: " + sourcePath +
                   "\n" +
                   "\n  >> To:   " + destinationPath + 
                   "\n -----------------------------------------------\n";

    logFile.writeln(logEntry);
    logFile.close();

    $.writeln(logEntry);
}

function askToOverwrite(file) {
    var fileName = decodeURIComponent(file.name);
    return confirm("A file named \"" + fileName + "\" already exists. Do you want to overwrite it?", true, "Overwrite?");
}

var project = app.project;
var selectedItems = app.getCurrentProjectViewSelection();
var sdkLog = [];
$.writeln(selectedItems.length);
if (project) {
    if (selectedItems.length > 0) {
        var projectFilePath = project.path;
        var splitProjectPath = projectFilePath.split(/[\/\\]/);
        var projectFolderPath = splitProjectPath.slice(0, -1).join('/');

        var newFolder = new Folder(projectFolderPath);
        var newPath = newFolder.selectDlg("Select the parent folder for the batch link");

        if (newPath) {
            var logFile = new File(newPath.fsName + "/copied_media_log.txt");

            // Add a timestamped header to the log file
            if (!logFile.exists) {
                logFile.open("w");
            } else {
                logFile.open("e");
                logFile.seek(0, 2);
            }
            logFile.writeln("=== Media Copy Log: " + new Date().toUTCString() + " ===");
            logFile.writeln("");
            logFile.close();

            for (var i = 0; i < selectedItems.length; i++) {
                var item = selectedItems[i];

                if (item.type === 1) {
                    var mediaPath = item.getMediaPath();
                    var itemFileName = mediaPath.split(/[\/\\]/).pop();
                    var sourceFile = new File(mediaPath);
                    var destinationFile = new File(newPath.fsName + "/" + itemFileName);

                    if (sourceFile.exists) {
                        if (destinationFile.exists) {
                            // Ask if the user wants to overwrite
                            var overwrite = askToOverwrite(destinationFile);
                            if (!overwrite) {
                                $.writeln("Skipped: " + itemFileName + " (already exists, user chose not to overwrite)");
                                continue; // Skip to next file
                            }
                        }

                        // Proceed with the copy if not skipped
                        var success = sourceFile.copy(destinationFile.fsName);
                        if (success) {
                            logCopiedMedia(logFile, itemFileName, sourceFile.fsName, destinationFile.fsName);
                            sdkLog.push(1);
                        } else {
                            $.writeln("Error 5: Failed to copy file: " + itemFileName);
                            sdkLog.push(0);
                        }
                    } else {
                        $.writeln("Error 4: Source file does not exist: " + mediaPath);
                        sdkLog.push(0);
                    }
                } else {
                    $.writeln("Error 3: Skipping clip " + item.name + " - unsupported item type: " + item.type);
                }
            }
            var sdkLogLength = sdkLog.length;
            if(sdkLogLength > 0) {
                var sdkLogSum = 0;
                for (var j = 0; j < sdkLog.length; j++) {
                    sdkLogSum += sdkLog[j];
                }
                
                if (sdkLogLength === sdkLogSum) {
                    var sdkMessage = "Success! " + sdkLogSum + " files copied successfully to " + newPath.fsName;
                } else {
                    var sdkMessage = sdkLogSum + " of " + sdkLogLength + " successfully copied. See log at " + logFile.fsName + " for more details.";
                }
                
                app.setSDKEventMessage(sdkMessage, "info");
            }
        } else {
            $.writeln("Error 2: User cancelled folder selection");
        }
    } else {
        var error = "Error 1: No project items selected";
        $.writeln(error);
        alert(error);
    }
} else {
    var error = "Error 0: No project open";
    $.writeln(error);
    alert(error);
}
